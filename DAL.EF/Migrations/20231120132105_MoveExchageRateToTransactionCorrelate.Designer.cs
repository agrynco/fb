// <auto-generated />
using System;
using DAL.EF;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DAL.EF.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20231120132105_MoveExchageRateToTransactionCorrelate")]
    partial class MoveExchageRateToTransactionCorrelate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("CountryCurrency", b =>
                {
                    b.Property<int>("CountriesId")
                        .HasColumnType("int");

                    b.Property<int>("CurrenciesId")
                        .HasColumnType("int");

                    b.HasKey("CountriesId", "CurrenciesId");

                    b.HasIndex("CurrenciesId");

                    b.ToTable("CountryCurrency");
                });

            modelBuilder.Entity("Domain.Finances.Account", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<decimal>("Balance")
                        .HasColumnType("decimal(65,30)");

                    b.Property<bool>("Closed")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime(6)")
                        .HasDefaultValueSql("(UTC_TIMESTAMP)");

                    b.Property<int>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<int>("OwnerId")
                        .HasColumnType("int");

                    b.Property<string>("Purpose")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Updated")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("CurrencyId");

                    b.HasIndex("OwnerId");

                    b.HasIndex("Name", "OwnerId", "CurrencyId")
                        .IsUnique();

                    b.ToTable("Accounts");

                    b.UseTptMappingStrategy();
                });

            modelBuilder.Entity("Domain.Finances.Bank", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime(6)")
                        .HasDefaultValueSql("(UTC_TIMESTAMP)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("Updated")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Banks", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Приват банк"
                        },
                        new
                        {
                            Id = 2,
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "MONO банк"
                        });
                });

            modelBuilder.Entity("Domain.Finances.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime(6)")
                        .HasDefaultValueSql("(UTC_TIMESTAMP)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("Updated")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Countries");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Австрія"
                        },
                        new
                        {
                            Id = 2,
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Бельгія"
                        },
                        new
                        {
                            Id = 3,
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Болгарія"
                        },
                        new
                        {
                            Id = 4,
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Венгрія"
                        },
                        new
                        {
                            Id = 5,
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Німеччина"
                        },
                        new
                        {
                            Id = 6,
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Греція"
                        },
                        new
                        {
                            Id = 7,
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Данія"
                        },
                        new
                        {
                            Id = 8,
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Ірландія"
                        },
                        new
                        {
                            Id = 9,
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Іспанія"
                        },
                        new
                        {
                            Id = 10,
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Італія"
                        },
                        new
                        {
                            Id = 11,
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Кіпр"
                        },
                        new
                        {
                            Id = 12,
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Латвія"
                        },
                        new
                        {
                            Id = 13,
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Литва"
                        },
                        new
                        {
                            Id = 14,
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Люксембург"
                        },
                        new
                        {
                            Id = 15,
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Мальта"
                        },
                        new
                        {
                            Id = 16,
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Нідерланди"
                        },
                        new
                        {
                            Id = 17,
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Польща"
                        },
                        new
                        {
                            Id = 18,
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Португалія"
                        },
                        new
                        {
                            Id = 19,
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Руминія"
                        },
                        new
                        {
                            Id = 20,
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Словакія"
                        },
                        new
                        {
                            Id = 21,
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Словенія"
                        },
                        new
                        {
                            Id = 22,
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Фінляндія"
                        },
                        new
                        {
                            Id = 23,
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Франція"
                        },
                        new
                        {
                            Id = 24,
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Хорватія"
                        },
                        new
                        {
                            Id = 25,
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Чехія"
                        },
                        new
                        {
                            Id = 26,
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Швеція"
                        },
                        new
                        {
                            Id = 27,
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Естонія"
                        },
                        new
                        {
                            Id = 28,
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Україна"
                        },
                        new
                        {
                            Id = 29,
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "США"
                        });
                });

            modelBuilder.Entity("Domain.Finances.Currency", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime(6)")
                        .HasDefaultValueSql("(UTC_TIMESTAMP)");

                    b.Property<string>("IsoCode")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("SymbolOrAbbrev")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("Updated")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Currencies");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsoCode = "UAH",
                            Name = "Українська гривня",
                            SymbolOrAbbrev = "₴"
                        },
                        new
                        {
                            Id = 2,
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsoCode = "EUR",
                            Name = "Євро",
                            SymbolOrAbbrev = "€"
                        },
                        new
                        {
                            Id = 3,
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsoCode = "USD",
                            Name = "Долар США",
                            SymbolOrAbbrev = "$"
                        });
                });

            modelBuilder.Entity("Domain.Finances.Transactions.Transaction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("AccountId")
                        .HasColumnType("int");

                    b.Property<int>("ActorId")
                        .HasColumnType("int");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(65,30)");

                    b.Property<int?>("CategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime(6)")
                        .HasDefaultValueSql("(UTC_TIMESTAMP)");

                    b.Property<int>("DayOfWeek")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<int>("MonthOfYear")
                        .HasColumnType("int");

                    b.Property<int?>("TransactionCorrelationId")
                        .HasColumnType("int");

                    b.Property<DateTime>("TransactionDateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("TransactionWeekOfYear")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Updated")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.HasIndex("ActorId");

                    b.HasIndex("CategoryId");

                    b.HasIndex("TransactionCorrelationId");

                    b.ToTable("Transactions", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AccountId = 1,
                            ActorId = 1,
                            Amount = 100000m,
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DayOfWeek = 1,
                            Description = "Income",
                            MonthOfYear = 5,
                            TransactionDateTime = new DateTime(2023, 5, 1, 0, 1, 0, 0, DateTimeKind.Unspecified),
                            TransactionWeekOfYear = 18,
                            Type = 0
                        },
                        new
                        {
                            Id = 2,
                            AccountId = 1,
                            ActorId = 1,
                            Amount = -2400m,
                            CategoryId = 2,
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DayOfWeek = 1,
                            Description = "Продукти",
                            MonthOfYear = 5,
                            TransactionDateTime = new DateTime(2023, 5, 1, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            TransactionWeekOfYear = 18,
                            Type = 1
                        },
                        new
                        {
                            Id = 3,
                            AccountId = 1,
                            ActorId = 1,
                            Amount = -200m,
                            CategoryId = 19,
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DayOfWeek = 0,
                            Description = "Інтернет",
                            MonthOfYear = 5,
                            TransactionDateTime = new DateTime(2023, 5, 7, 11, 0, 0, 0, DateTimeKind.Unspecified),
                            TransactionWeekOfYear = 18,
                            Type = 1
                        },
                        new
                        {
                            Id = 4,
                            AccountId = 1,
                            ActorId = 1,
                            Amount = -440m,
                            CategoryId = 4,
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DayOfWeek = 1,
                            Description = "Шашлик",
                            MonthOfYear = 5,
                            TransactionDateTime = new DateTime(2023, 5, 15, 14, 30, 0, 0, DateTimeKind.Unspecified),
                            TransactionWeekOfYear = 20,
                            Type = 1
                        },
                        new
                        {
                            Id = 5,
                            AccountId = 1,
                            ActorId = 1,
                            Amount = -1450m,
                            CategoryId = 50,
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DayOfWeek = 1,
                            Description = "Газ",
                            MonthOfYear = 5,
                            TransactionDateTime = new DateTime(2023, 5, 15, 14, 30, 0, 0, DateTimeKind.Unspecified),
                            TransactionWeekOfYear = 20,
                            Type = 1
                        },
                        new
                        {
                            Id = 6,
                            AccountId = 1,
                            ActorId = 1,
                            Amount = -350m,
                            CategoryId = 17,
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DayOfWeek = 0,
                            Description = "Холодна вода",
                            MonthOfYear = 5,
                            TransactionDateTime = new DateTime(2023, 5, 28, 14, 30, 0, 0, DateTimeKind.Unspecified),
                            TransactionWeekOfYear = 21,
                            Type = 1
                        },
                        new
                        {
                            Id = 7,
                            AccountId = 1,
                            ActorId = 1,
                            Amount = -1000m,
                            CategoryId = 22,
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DayOfWeek = 1,
                            Description = "Консерви",
                            MonthOfYear = 5,
                            TransactionDateTime = new DateTime(2023, 5, 29, 10, 15, 0, 0, DateTimeKind.Unspecified),
                            TransactionWeekOfYear = 22,
                            Type = 1
                        });
                });

            modelBuilder.Entity("Domain.Finances.Transactions.TransactionCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime(6)")
                        .HasDefaultValueSql("(UTC_TIMESTAMP)");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)");

                    b.Property<int>("OwnerId")
                        .HasColumnType("int");

                    b.Property<int?>("ParentId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Updated")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("OwnerId");

                    b.HasIndex("ParentId");

                    b.HasIndex("Name", "ParentId", "OwnerId");

                    b.ToTable("TransactionCategories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Прибутки",
                            OwnerId = 1
                        },
                        new
                        {
                            Id = 2,
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Продукти",
                            OwnerId = 1
                        },
                        new
                        {
                            Id = 3,
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Молочні",
                            OwnerId = 1,
                            ParentId = 2
                        },
                        new
                        {
                            Id = 4,
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "М'ясні",
                            OwnerId = 1,
                            ParentId = 2
                        },
                        new
                        {
                            Id = 5,
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Хлібобулочні",
                            OwnerId = 1,
                            ParentId = 2
                        },
                        new
                        {
                            Id = 6,
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Овочі",
                            OwnerId = 1,
                            ParentId = 2
                        },
                        new
                        {
                            Id = 7,
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Фрукти",
                            OwnerId = 1,
                            ParentId = 2
                        },
                        new
                        {
                            Id = 8,
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Ягоди",
                            OwnerId = 1,
                            ParentId = 2
                        },
                        new
                        {
                            Id = 9,
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Побутова техніка",
                            OwnerId = 1
                        },
                        new
                        {
                            Id = 10,
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Особисте здоров'я",
                            OwnerId = 1
                        },
                        new
                        {
                            Id = 11,
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Відпочинок",
                            OwnerId = 1
                        },
                        new
                        {
                            Id = 12,
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Навчання",
                            OwnerId = 1
                        },
                        new
                        {
                            Id = 13,
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Одежа",
                            OwnerId = 1
                        },
                        new
                        {
                            Id = 14,
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Комунальні послуги",
                            OwnerId = 1,
                            ParentId = 14
                        },
                        new
                        {
                            Id = 15,
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Опалення",
                            OwnerId = 1,
                            ParentId = 14
                        },
                        new
                        {
                            Id = 16,
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Гаряча вода",
                            OwnerId = 1,
                            ParentId = 14
                        },
                        new
                        {
                            Id = 17,
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Холодна вода",
                            OwnerId = 1,
                            ParentId = 14
                        },
                        new
                        {
                            Id = 18,
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Електроенергія",
                            OwnerId = 1,
                            ParentId = 14
                        },
                        new
                        {
                            Id = 19,
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Інтернет",
                            OwnerId = 1,
                            ParentId = 14
                        },
                        new
                        {
                            Id = 20,
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Мобільний зв'язок",
                            OwnerId = 1,
                            ParentId = 14
                        },
                        new
                        {
                            Id = 21,
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Домашні тварини",
                            OwnerId = 1
                        },
                        new
                        {
                            Id = 22,
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Кіт",
                            OwnerId = 1,
                            ParentId = 21
                        },
                        new
                        {
                            Id = 23,
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Хом'як",
                            OwnerId = 1,
                            ParentId = 21
                        },
                        new
                        {
                            Id = 24,
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Транспорт",
                            OwnerId = 1
                        },
                        new
                        {
                            Id = 25,
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Автомобіль",
                            OwnerId = 1,
                            ParentId = 24
                        },
                        new
                        {
                            Id = 26,
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Витратні матеріали",
                            OwnerId = 1,
                            ParentId = 25
                        },
                        new
                        {
                            Id = 27,
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Тормозні колодки",
                            OwnerId = 1,
                            ParentId = 26
                        },
                        new
                        {
                            Id = 28,
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Передні",
                            OwnerId = 1,
                            ParentId = 27
                        },
                        new
                        {
                            Id = 29,
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Задні",
                            OwnerId = 1,
                            ParentId = 27
                        },
                        new
                        {
                            Id = 30,
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Покришки",
                            OwnerId = 1,
                            ParentId = 26
                        },
                        new
                        {
                            Id = 31,
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Зимові",
                            OwnerId = 1,
                            ParentId = 30
                        },
                        new
                        {
                            Id = 32,
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Літні",
                            OwnerId = 1,
                            ParentId = 30
                        },
                        new
                        {
                            Id = 33,
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Рідини",
                            OwnerId = 1,
                            ParentId = 26
                        },
                        new
                        {
                            Id = 34,
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Омивайка",
                            OwnerId = 1,
                            ParentId = 33
                        },
                        new
                        {
                            Id = 35,
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Олія моторна",
                            OwnerId = 1,
                            ParentId = 33
                        },
                        new
                        {
                            Id = 36,
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Олія коробки передач",
                            OwnerId = 1,
                            ParentId = 33
                        },
                        new
                        {
                            Id = 37,
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Фільтри",
                            OwnerId = 1,
                            ParentId = 26
                        },
                        new
                        {
                            Id = 38,
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Салон",
                            OwnerId = 1,
                            ParentId = 37
                        },
                        new
                        {
                            Id = 39,
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Фільтр олії (двигун)",
                            OwnerId = 1,
                            ParentId = 37
                        },
                        new
                        {
                            Id = 40,
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Повітряний фільтр",
                            OwnerId = 1,
                            ParentId = 37
                        },
                        new
                        {
                            Id = 41,
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Обслуговування",
                            OwnerId = 1,
                            ParentId = 25
                        },
                        new
                        {
                            Id = 42,
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Заміна покришок (зима/літо)",
                            OwnerId = 1,
                            ParentId = 41
                        },
                        new
                        {
                            Id = 43,
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Техогляд (кожні 10 тис. км.)",
                            OwnerId = 1,
                            ParentId = 41
                        },
                        new
                        {
                            Id = 44,
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Заміна тормозних колодок",
                            OwnerId = 1,
                            ParentId = 43
                        },
                        new
                        {
                            Id = 45,
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Заміна масла двигуна",
                            OwnerId = 1,
                            ParentId = 43
                        },
                        new
                        {
                            Id = 46,
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Заміна фільтра олії (двигун)",
                            OwnerId = 1,
                            ParentId = 43
                        },
                        new
                        {
                            Id = 47,
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Заміна зовнішнього повітряного фільтра",
                            OwnerId = 1,
                            ParentId = 43
                        },
                        new
                        {
                            Id = 48,
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "ГБО",
                            OwnerId = 1,
                            ParentId = 43
                        },
                        new
                        {
                            Id = 49,
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Паливо",
                            OwnerId = 1,
                            ParentId = 25
                        },
                        new
                        {
                            Id = 50,
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Газ",
                            OwnerId = 1,
                            ParentId = 49
                        },
                        new
                        {
                            Id = 51,
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Бензин",
                            OwnerId = 1,
                            ParentId = 49
                        });
                });

            modelBuilder.Entity("Domain.Finances.Transactions.TransactionCorrelation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime(6)");

                    b.Property<decimal>("ExchangeRate")
                        .HasColumnType("decimal(65,30)");

                    b.Property<int>("IncomeTransactionId")
                        .HasColumnType("int");

                    b.Property<int>("OutcomeTransactionId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Updated")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("IncomeTransactionId")
                        .IsUnique();

                    b.HasIndex("OutcomeTransactionId")
                        .IsUnique();

                    b.ToTable("TransactionCorrelations");
                });

            modelBuilder.Entity("Domain.OutgoingEmail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Body")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime(6)")
                        .HasDefaultValueSql("(UTC_TIMESTAMP)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasMaxLength(400)
                        .HasColumnType("varchar(400)");

                    b.Property<int>("TemplateId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Updated")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ValidUntil")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("TemplateId");

                    b.HasIndex("UserId");

                    b.HasIndex("Subject", "UserId")
                        .IsUnique();

                    b.ToTable("Emails");
                });

            modelBuilder.Entity("Domain.OutgoingEmailTemplate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("BodyTemplate")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime(6)")
                        .HasDefaultValueSql("(UTC_TIMESTAMP)");

                    b.Property<string>("SubjectTemplate")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("varchar(300)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Updated")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("SubjectTemplate")
                        .IsUnique();

                    b.ToTable("EmailTemplates");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BodyTemplate = "<header>\r\n    <h1>Підтвердження реєстрації</h1>\r\n    <meta charset=\"UTF-8\">\r\n    <style>\r\n        .greeting {\r\n            font-weight: bold;\r\n        }\r\n\r\n        .normal {\r\n            font-size: 1.2em;\r\n        }\r\n    </style>\r\n</header>\r\n\r\n<div class=\"normal\">\r\n    <p>Доброго дня, <span class=\"greeting\">{{Name}}!</span></i></p>\r\n\r\n    <p>Ви зареєструвалися на сайті <a href=\"{{SiteUrl}}\">{{SiteName}}</a>.</p>\r\n\r\n    <p>Для підтвердження реєстрації перейдіть за посиланням: <a href=\"{{ConfirmUrl}}\">{{ConfirmUrl}}</a></p>\r\n\r\n    <p>Якщо ви не реєструвалися на сайті <a href=\"{{SiteUrl}}\">{{SiteName}}</a>, то просто проігноруйте цей лист.</p>\r\n</div>\r\n\r\n<p>З повагою, <a href=\"{{SiteUrl}}\">{{SiteName}}</a>.</p>",
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SubjectTemplate = "Activating new user",
                            Type = 0
                        });
                });

            modelBuilder.Entity("Domain.RefreshToken", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime(6)")
                        .HasDefaultValueSql("(UTC_TIMESTAMP)");

                    b.Property<string>("CreatedByIp")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("Expires")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("ReasonRevoked")
                        .HasColumnType("longtext");

                    b.Property<string>("ReplacedByToken")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("Revoked")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("RevokedByIp")
                        .HasColumnType("longtext");

                    b.Property<string>("Token")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("Updated")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("RefreshTokens");
                });

            modelBuilder.Entity("Domain.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("Activated")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime(6)")
                        .HasDefaultValueSql("(UTC_TIMESTAMP)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)");

                    b.Property<string>("EmailConfirmationToken")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(75)
                        .HasColumnType("varchar(75)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(75)
                        .HasColumnType("varchar(75)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("varbinary(250)");

                    b.Property<DateTime?>("Updated")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Activated = true,
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "agrynco@gmail.com",
                            EmailConfirmationToken = "7bdcabb7-d216-45f6-b523-1ba6894899e3",
                            FirstName = "Anatolii",
                            LastName = "Hrynchuk",
                            PasswordHash = "6QqKKDVyflm2tQyTo2OxDp2WOjmPldJxyIV7HNsJeE0=",
                            PasswordSalt = new byte[] { 195, 211, 51, 65, 6, 97, 224, 29, 88, 12, 22, 76, 116, 140, 249, 214 },
                            Username = "agrynco"
                        },
                        new
                        {
                            Id = 2,
                            Activated = true,
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "family.budget.2023@gmail.com",
                            EmailConfirmationToken = "bf5f3882-cf29-49ea-bd2e-ebedb6ac0d1e",
                            FirstName = "Family",
                            LastName = "Budget",
                            PasswordHash = "6QqKKDVyflm2tQyTo2OxDp2WOjmPldJxyIV7HNsJeE0=",
                            PasswordSalt = new byte[] { 195, 211, 51, 65, 6, 97, 224, 29, 88, 12, 22, 76, 116, 140, 249, 214 },
                            Username = "family.budget"
                        });
                });

            modelBuilder.Entity("Domain.Finances.BankAccount", b =>
                {
                    b.HasBaseType("Domain.Finances.Account");

                    b.Property<int>("BankId")
                        .HasColumnType("int");

                    b.Property<string>("IBAN")
                        .IsRequired()
                        .HasMaxLength(34)
                        .HasColumnType("varchar(34)");

                    b.HasIndex("BankId", "IBAN")
                        .IsUnique();

                    b.ToTable("BankAccounts", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 9,
                            Balance = 0m,
                            Closed = false,
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CurrencyId = 2,
                            Name = "ФОП",
                            OwnerId = 1,
                            Type = 1,
                            BankId = 2,
                            IBAN = "UA223220010000026005330066082"
                        });
                });

            modelBuilder.Entity("Domain.Finances.CardAccount", b =>
                {
                    b.HasBaseType("Domain.Finances.Account");

                    b.Property<int>("BankId")
                        .HasColumnType("int");

                    b.Property<string>("CardNumber")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("varchar(16)");

                    b.HasIndex("BankId");

                    b.HasIndex("CardNumber", "BankId")
                        .IsUnique();

                    b.ToTable("CardAccounts", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 4,
                            Balance = 0m,
                            Closed = false,
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CurrencyId = 1,
                            Name = "Карта ключ до рахунку",
                            OwnerId = 1,
                            Type = 2,
                            BankId = 1,
                            CardNumber = "5169330523068218"
                        },
                        new
                        {
                            Id = 5,
                            Balance = 0m,
                            Closed = false,
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CurrencyId = 1,
                            Name = "Звичайна картка",
                            OwnerId = 1,
                            Type = 2,
                            BankId = 1,
                            CardNumber = "5375411412366993"
                        },
                        new
                        {
                            Id = 6,
                            Balance = 0m,
                            Closed = false,
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CurrencyId = 1,
                            Name = "Чорна картка",
                            OwnerId = 1,
                            Type = 2,
                            BankId = 2,
                            CardNumber = "5375414144891016"
                        },
                        new
                        {
                            Id = 7,
                            Balance = 0m,
                            Closed = false,
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CurrencyId = 1,
                            Name = "Біла картка",
                            OwnerId = 1,
                            Type = 2,
                            BankId = 2,
                            CardNumber = "537541508625303"
                        });
                });

            modelBuilder.Entity("Domain.Finances.CashAccount", b =>
                {
                    b.HasBaseType("Domain.Finances.Account");

                    b.ToTable("CashAccounts", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Balance = 85160m,
                            Closed = false,
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CurrencyId = 1,
                            Name = "Накопичення",
                            OwnerId = 1,
                            Type = 3
                        },
                        new
                        {
                            Id = 2,
                            Balance = 0m,
                            Closed = false,
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CurrencyId = 2,
                            Name = "Накопичення",
                            OwnerId = 1,
                            Type = 3
                        },
                        new
                        {
                            Id = 3,
                            Balance = 0m,
                            Closed = false,
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CurrencyId = 3,
                            Name = "Накопичення",
                            OwnerId = 1,
                            Type = 3
                        });
                });

            modelBuilder.Entity("CountryCurrency", b =>
                {
                    b.HasOne("Domain.Finances.Country", null)
                        .WithMany()
                        .HasForeignKey("CountriesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Finances.Currency", null)
                        .WithMany()
                        .HasForeignKey("CurrenciesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Domain.Finances.Account", b =>
                {
                    b.HasOne("Domain.Finances.Currency", "Currency")
                        .WithMany()
                        .HasForeignKey("CurrencyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.User", "Owner")
                        .WithMany()
                        .HasForeignKey("OwnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Currency");

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("Domain.Finances.Transactions.Transaction", b =>
                {
                    b.HasOne("Domain.Finances.Account", "Account")
                        .WithMany()
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.User", "Actor")
                        .WithMany()
                        .HasForeignKey("ActorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Finances.Transactions.TransactionCategory", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId");

                    b.HasOne("Domain.Finances.Transactions.TransactionCorrelation", "TransactionCorrelation")
                        .WithMany()
                        .HasForeignKey("TransactionCorrelationId");

                    b.Navigation("Account");

                    b.Navigation("Actor");

                    b.Navigation("Category");

                    b.Navigation("TransactionCorrelation");
                });

            modelBuilder.Entity("Domain.Finances.Transactions.TransactionCategory", b =>
                {
                    b.HasOne("Domain.User", "Owner")
                        .WithMany()
                        .HasForeignKey("OwnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Finances.Transactions.TransactionCategory", "Parent")
                        .WithMany()
                        .HasForeignKey("ParentId");

                    b.Navigation("Owner");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("Domain.OutgoingEmail", b =>
                {
                    b.HasOne("Domain.OutgoingEmailTemplate", "Template")
                        .WithMany()
                        .HasForeignKey("TemplateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Template");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Domain.RefreshToken", b =>
                {
                    b.HasOne("Domain.User", null)
                        .WithMany("RefreshTokens")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("Domain.Finances.BankAccount", b =>
                {
                    b.HasOne("Domain.Finances.Bank", "Bank")
                        .WithMany()
                        .HasForeignKey("BankId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Finances.Account", null)
                        .WithOne()
                        .HasForeignKey("Domain.Finances.BankAccount", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bank");
                });

            modelBuilder.Entity("Domain.Finances.CardAccount", b =>
                {
                    b.HasOne("Domain.Finances.Bank", "Bank")
                        .WithMany()
                        .HasForeignKey("BankId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Finances.Account", null)
                        .WithOne()
                        .HasForeignKey("Domain.Finances.CardAccount", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bank");
                });

            modelBuilder.Entity("Domain.Finances.CashAccount", b =>
                {
                    b.HasOne("Domain.Finances.Account", null)
                        .WithOne()
                        .HasForeignKey("Domain.Finances.CashAccount", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Domain.User", b =>
                {
                    b.Navigation("RefreshTokens");
                });
#pragma warning restore 612, 618
        }
    }
}
